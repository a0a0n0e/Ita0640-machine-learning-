#4ARTIFICIAL NEURAL NETWORK WITH BACKPROPAGATION.
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import classification_report
import matplotlib.pyplot as plt

# Read CSV file
data = pd.read_csv(r"C:\Users\Ankita Bhattacharjee\Documents\ann_data.csv")

# Prepare data
X = data.drop(columns=['class'])
y = data['class']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

# Train model
model = MLPClassifier(hidden_layer_sizes=(5, 2), max_iter=1000)
model.fit(X_train, y_train)

# Predictions and evaluation
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))

# Plot training loss curve
plt.plot(model.loss_curve_)
plt.title('Training Loss Curve')
plt.xlabel('Iterations')
plt.ylabel('Loss')
plt.show()

